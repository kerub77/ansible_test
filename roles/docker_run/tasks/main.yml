---
- name: Run Docker container and capture output
  hosts: all
  gather_facts: no
  become: yes
  tasks:
    - name: Unset existing OS_* variables
      become: yes
      become_user: root
      ansible.builtin.shell: |
        for key in $( set | awk -F '=' '/^OS_/ {print $1}' ); do
          unset $key
        done
        export OS_PROJECT_DOMAIN_NAME="{{ openstack_project_domain_name }}"
        export OS_USER_DOMAIN_NAME="{{ openstack_user_domain_name }}"
        export OS_PROJECT_NAME="{{ openstack_project_name }}"
        export OS_TENANT_NAME="{{ openstack_tenant_name }}"
        export OS_USERNAME="{{ openstack_username }}"
        export OS_PASSWORD="{{ openstack_password }}"
        export OS_AUTH_URL="{{ openstack_auth_url }}"
        export OS_INTERFACE="{{ openstack_interface }}"
        export OS_ENDPOINT_TYPE="{{ openstack_endpoint_type }}"
        export OS_IDENTITY_API_VERSION="{{ openstack_identity_api_version }}"
        export OS_REGION_NAME="{{ openstack_region_name }}"
        export OS_AUTH_PLUGIN="{{ openstack_auth_plugin }}"
        export OS_PROJECT_ID="{{ openstack_project_id }}"
        export OS_DOMAIN_ID="{{ openstack_domain_id }}"
        export OS_INSECURE="{{ openstack_insecure }}"

    - name: Filtra le variabili d'ambiente che iniziano con OS_ e salva in un file temporaneo
      become: yes
      become_user: root
      shell: |
        env | grep OS_ > /tmp/os_env_vars
      register: env_output
      changed_when: false
      ignore_errors: yes

    - name: Execute docker run command
      command: >
        docker run --rm
        --privileged
        --network host
        -v /dev:/dev:ro
        -v /usr/lib64/vmware-vix-disklib/:/usr/lib64/vmware-vix-disklib:ro
        "{{ docker_image }}" --help
      register: docker_output

    - name: Display the output of the command
      debug:
        msg: "{{ docker_output.stdout }}"


