---
- name: Run Docker container and capture output
  gather_facts: no
  become: yes
  become_user: root
  tasks:
    - name: Unset existing OS_* variables
      become: yes
      ansible.builtin.shell: |
        for key in $( env | awk -F '=' '/^OS_/ {print $1}' ); do
          unset "$key"
        done
        export OS_PROJECT_DOMAIN_NAME="{{ openstack_project_domain_name }}"
        export OS_USER_DOMAIN_NAME="{{ openstack_user_domain_name }}"
        export OS_PROJECT_NAME="{{ openstack_project_name }}"
        export OS_TENANT_NAME="{{ openstack_tenant_name }}"
        export OS_USERNAME="{{ openstack_username }}"
        export OS_PASSWORD="{{ openstack_password }}"
        export OS_AUTH_URL="{{ openstack_auth_url }}"
        export OS_INTERFACE="{{ openstack_interface }}"
        export OS_ENDPOINT_TYPE="{{ openstack_endpoint_type }}"
        export OS_IDENTITY_API_VERSION="{{ openstack_identity_api_version }}"
        export OS_REGION_NAME="{{ openstack_region_name }}"
        export OS_AUTH_PLUGIN="{{ openstack_auth_plugin }}"
        export OS_PROJECT_ID="{{ openstack_project_id }}"
        export OS_DOMAIN_ID="{{ openstack_domain_id }}"
        export OS_INSECURE="{{ openstack_insecure }}"

    - name: Filtra le variabili d'ambiente che iniziano con OS_
      ansible.builtin.command: env | grep OS_
      register: env_output
      changed_when: false
      ignore_errors: yes

    - name: Check if Docker image is available
      ansible.builtin.command: docker images --format "{{ .Repository }}:{{ .Tag }}" | grep "{{ docker_image }}"
      register: docker_image_check
      failed_when: docker_image_check.rc != 0 and docker_image_check.rc != 1
      ignore_errors: yes

    - name: Pull Docker image if not available
      ansible.builtin.command: docker pull "{{ docker_image }}"
      when: docker_image_check.rc != 0

    - name: Execute docker run command
      ansible.builtin.command: >
        docker run --rm
        --privileged
        --network host
        -v /dev:/dev:ro
        -v /usr/lib64/vmware-vix-disklib/:/usr/lib64/vmware-vix-disklib:ro
        "{{ docker_image }}" --help
      register: docker_output
      failed_when: docker_output.rc != 0

    - name: Display the output of the command
      debug:
        msg: "STDOUT: {{ docker_output.stdout }}\nSTDERR: {{ docker_output.stderr }}"
      failed_when: docker_output.rc != 0